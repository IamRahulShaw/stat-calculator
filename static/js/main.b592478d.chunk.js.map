{"version":3,"sources":["App.js","index.js"],"names":["App","initialDataStat","Mean","Meadian","Mode","StandardDeviation","useState","input","setInput","dataArray","setDataArray","dataStat","setDataStat","className","onSubmit","event","preventDefault","type","value","onChange","target","id","placeholder","onClick","push","Number","mean","median","mode","sd","map","Map","sort","a","b","arrayLength","length","reduce","prevVal","currVal","set","i","get","maximumOccur","Math","max","Array","from","values","modeArray","entries","join","squaredArray","element","pow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA2IeA,MAxIf,WACE,IAAMC,EAAkB,CACtBC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,kBAAmB,IALR,EAOaC,mBAAS,IAPtB,mBAONC,EAPM,KAOCC,EAPD,OAQqBF,mBAAS,IAR9B,mBAQNG,EARM,KAQKC,EARL,OASmBJ,mBAASL,GAT5B,mBASNU,EATM,KASIC,EATJ,KA0Eb,OACE,qCACE,qBAAKC,UAAU,kBAAf,SACE,uBACEC,SAAU,SAACC,GACTA,EAAMC,kBAFV,UAKE,uBACEC,KAAK,SACLC,MAAOX,EACPY,SAAU,SAACJ,GACTP,EAASO,EAAMK,OAAOF,QAExBG,GAAG,cACHC,YAAY,qBAEd,sBAAKD,GAAG,YAAR,UACE,wBAAQA,GAAG,MAAME,QAjF3B,WACEd,EAAUe,KAAKC,OAAOlB,IACtBC,EAAS,KA+ED,iBAGA,wBAAQa,GAAG,QAAQE,QAhF7B,WACEb,EAAa,IACbE,EAAYX,IA8EJ,mBAGA,wBAAQoB,GAAG,SAASE,QA/E9B,WACE,IAAIG,EAAMC,EAAQC,EAAMC,EACpBC,EAAM,IAAIC,IACdtB,EAAUuB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAC7B,IAAIC,EAAc1B,EAAU2B,OAE1BT,EADEQ,EAAc,GAAK,GAElB1B,EAAU0B,EAAc,EAAI,GAAK1B,EAAU0B,EAAc,IAAM,EAEzD1B,GAAW0B,EAAc,GAAK,GAGzCT,EACEjB,EAAU4B,QAAO,SAACC,EAASC,GAAV,OAAsBD,EAAUC,IAAS,GAC1DJ,EAEFL,EAAIU,IAAI/B,EAAU,GAAI,GACtB,IAAK,IAAIgC,EAAI,EAAGA,EAAIhC,EAAU2B,OAAQK,IAChChC,EAAUgC,IAAMhC,EAAUgC,EAAI,GAChCX,EAAIU,IAAI/B,EAAUgC,GAAIX,EAAIY,IAAIjC,EAAUgC,IAAM,GAE9CX,EAAIU,IAAI/B,EAAUgC,GAAI,GAG1B,IAxBsB,EAwBlBE,EAAeC,KAAKC,IAAL,MAAAD,KAAI,YAAQE,MAAMC,KAAKjB,EAAIkB,YAC1CC,EAAY,GAzBM,cA0BFnB,GA1BE,IA0BtB,2BAAyB,CAAC,IAAjBoB,EAAgB,QACnBA,EAAQ,IAAMP,GAChBM,EAAUzB,KAAK0B,EAAQ,KA5BL,8BAgCpBtB,EADsB,GAApBqB,EAAUb,OACLa,EAAU,GAEVA,EAAUE,KAAK,MAGxB,IAAIC,EAAe3C,EAAUqB,KAAI,SAACuB,GAAD,OAAaT,KAAKU,IAAID,EAAU3B,EAAM,MAEvEG,EAAKe,KAAKU,IACRF,EAAaf,QAAO,SAACC,EAASC,GAAV,OAAsBD,EAAUC,IAAS,IAC1DJ,EAAc,GACjB,IAGFvB,EAAY,CACVV,KAAMwB,EACNvB,QAASwB,EACTvB,KAAMwB,EACNvB,kBAAmBwB,IAGrBnB,EAAa,KA2BL,4BAMN,qBAAKG,UAAU,iBAAf,SACE,kCACE,gCACE,+BACE,2CACA,4CAGJ,kCACE,+BACE,sCACA,6BAAKF,EAAST,UAEhB,+BACE,wCACA,6BAAKS,EAASR,aAEhB,+BACE,sCACA,6BAAKQ,EAASP,UAEhB,+BACE,oDACA,6BAAKO,EAASN,mCC7H5BkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b592478d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const initialDataStat = {\n    Mean: \"\",\n    Meadian: \"\",\n    Mode: \"\",\n    StandardDeviation: \"\",\n  };\n  const [input, setInput] = useState(\"\");\n  const [dataArray, setDataArray] = useState([]);\n  const [dataStat, setDataStat] = useState(initialDataStat);\n\n  function handleAdd() {\n    dataArray.push(Number(input));\n    setInput(\"\");\n  }\n  function handleReset() {\n    setDataArray([]);\n    setDataStat(initialDataStat);\n  }\n  function handleSubmit() {\n    let mean, median, mode, sd;\n    let map = new Map();\n    dataArray.sort((a, b) => a - b);\n    let arrayLength = dataArray.length;\n    if (arrayLength % 2 == 0) {\n      median =\n        (dataArray[arrayLength / 2 - 1] + dataArray[arrayLength / 2]) / 2;\n    } else {\n      median = dataArray[(arrayLength + 1) / 2];\n    }\n\n    mean =\n      dataArray.reduce((prevVal, currVal) => prevVal + currVal, 0) /\n      arrayLength;\n\n    map.set(dataArray[0], 1);\n    for (let i = 1; i < dataArray.length; i++) {\n      if (dataArray[i] == dataArray[i - 1]) {\n        map.set(dataArray[i], map.get(dataArray[i]) + 1);\n      } else {\n        map.set(dataArray[i], 1);\n      }\n    }\n    let maximumOccur = Math.max(...Array.from(map.values()));\n    let modeArray = [];\n    for (let entries of map) {\n      if (entries[1] == maximumOccur) {\n        modeArray.push(entries[0]);\n      }\n    }\n    if (modeArray.length == 1) {\n      mode = modeArray[0];\n    } else {\n      mode = modeArray.join(\", \");\n    }\n\n    let squaredArray = dataArray.map((element) => Math.pow(element - mean, 2));\n\n    sd = Math.pow(\n      squaredArray.reduce((prevVal, currVal) => prevVal + currVal, 0) /\n        (arrayLength - 1),\n      1 / 2\n    );\n\n    setDataStat({\n      Mean: mean,\n      Meadian: median,\n      Mode: mode,\n      StandardDeviation: sd,\n    });\n\n    setDataArray([]);\n  }\n\n  return (\n    <>\n      <div className=\"inputDiv middle\">\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <input\n            type=\"number\"\n            value={input}\n            onChange={(event) => {\n              setInput(event.target.value);\n            }}\n            id=\"inputNumber\"\n            placeholder=\"Enter the values\"\n          />\n          <div id=\"buttonDiv\">\n            <button id=\"add\" onClick={handleAdd}>\n              Add\n            </button>\n            <button id=\"reset\" onClick={handleReset}>\n              Reset\n            </button>\n            <button id=\"submit\" onClick={handleSubmit}>\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n      <div className=\"dataDiv middle\">\n        <table>\n          <thead>\n            <tr>\n              <th>Operation</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Mean</td>\n              <td>{dataStat.Mean}</td>\n            </tr>\n            <tr>\n              <td>Median</td>\n              <td>{dataStat.Meadian}</td>\n            </tr>\n            <tr>\n              <td>Mode</td>\n              <td>{dataStat.Mode}</td>\n            </tr>\n            <tr>\n              <td>Standard Deviation</td>\n              <td>{dataStat.StandardDeviation}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}